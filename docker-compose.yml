networks:
  rosnet:
    driver: bridge

services:
  roscore:
    image: ros:noetic-ros-core
    container_name: roscore
    networks:
      - rosnet
    environment:
      - ROS_MASTER_URI=http://roscore:11311
      - ROS_HOSTNAME=roscore
    command: roscore
    healthcheck:
      test: [ "CMD", "/ros_entrypoint.sh", "rosnode", "list" ]
      interval: 1s
      timeout: 2s

  ur5-sim:
    build:
      context: ur5-sim
      dockerfile: Dockerfile
    container_name: ur5-sim
    depends_on:
      roscore:
        condition: service_healthy
    networks:
      - rosnet
    environment:
      - ROS_MASTER_URI=http://roscore:11311
      - DISABLE_ROS1_EOL_WARNINGS=1
      - ROSCONSOLE_FORMAT=[$${severity}] [$${node}] $${message}
      - ROS_HOSTNAME=ur5-sim
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /dev/dri:/dev/dri
      - ./ur5-sim:/ws/src/ur5_sim
    command: >
      bash -c ". /ws/devel/setup.bash &&
       roslaunch --no-summary ur5_sim ur5_sim.launch"

  keyboard-teleop:
    build:
      context: keyboard-teleop
      dockerfile: Dockerfile
    container_name: keyboard-teleop
    depends_on:
      roscore:
        condition: service_healthy
    networks:
      - rosnet
    environment:
      - ROS_MASTER_URI=http://roscore:11311
      - ROSCONSOLE_FORMAT=[$${severity}] [$${node}] $${message}
      - ROS_HOSTNAME=keyboard-teleop
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./keyboard-teleop:/ws/src/keyboard_teleop
    stdin_open: true
    tty: true
    command: sleep infinity
